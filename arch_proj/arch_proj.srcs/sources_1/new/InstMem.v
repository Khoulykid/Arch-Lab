`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 03/05/2024 02:40:36 PM
// Design Name: 
// Module Name: InstMem
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module InstMem(input [5:0] addr, output [31:0] data_out); 
    reg [31:0] mem [0:63];
    assign data_out = mem[addr]; 
    initial begin 
         mem[0]=32'b0000000_00000_00000_000_00000_0110011 ; //add x0, x0, x0 
         mem[1]=32'b01000000000100011000000010110011 ;      //sub x1, x3, x1           x1 = 2
         mem[2]=32'b00000000000100100001000110110011 ;      //sll x3, x4, x5           x3 =128 //  error
         mem[3]=32'b00000000011000101010001000110011 ;      //slt x4, x5, x6           x4 = 1
         mem[4]=32'b00000000010100110010001010110011;       //slt x5, x6, x5            x5 = 0 // 
         mem[5]=32'b00000000100000111100001100110011 ;      //xor x6, x7, x8           x6 = 15
         mem[6]=32'b00000000000100111101001110110011 ;      //srl x7, x7, x1           x7 = 1  // error
         mem[7]=32'b00000000111101000110010000110011;       //or x8, x8, x15            x8 = 15
         mem[8]=32'b00000000101001001111010010110011 ;      //and x9, x9, x10          x9 = 8
         mem[9]=32'b00000000001001010000010100010011 ;      //addi x10, x10, 2         x10 = 12
         mem[10]=32'b00000001111101011010010110010011 ;     //slti x11, x11, 31       x11 = 1 // 
         mem[11]=32'b00000000101001111100011000010011 ;     //xori x12, x15, 10       x12 = 5   //error
         mem[12]=32'b00000000101001111110011010010011 ;     //ori x13, x15, 10        x13 = 15 
         mem[13]=32'b00000000101001111111011100010011 ;     //andi x14, x15, 10       x14 = 10  // error
        
    end
endmodule